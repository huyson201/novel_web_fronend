@use "./" as vars;
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
html {
  font-size: 16px;
}
body {
  font-family: vars.$primaryFont;
}

a {
  color: vars.$primaryColor;
  text-decoration: none;
  transition: all 0.3s;
  &:hover {
    color: vars.$textColor;
  }
}

a.disabled {
  pointer-events: none;
  opacity: 0.6;
}

.wrapper {
  width: 100%;
  margin: auto;

  @media (min-width: 1400px) {
    max-width: 1320px;
  }

  @media (max-width: 1400px) {
    max-width: 1104px;
  }

  @include vars.breakpoint-down(xl) {
    max-width: calc(100% - 200px);
  }

  @include vars.breakpoint-down(lg) {
    max-width: calc(100% - 80px);
  }

  @include vars.breakpoint-down(sm) {
    max-width: calc(100% - 40px);
  }

  @include vars.breakpoint-down(xs) {
    max-width: calc(100% - 20px);
  }
}
.main-content {
  padding-top: 55px;
  background: vars.$grayColor;
}
.separator {
  width: 100%;
  height: 1px;
  background: vars.$separatorColor;
}

$tagColor: (
  "blue": #3e8ed0,
  "green": #1eb553,
  "yellow": #ffe08a,
  "white": vars.$whiteColor,
);
$tagTextColors: (
  "white": vars.$whiteColor,
  "black": vars.$textColor,
);

.tag {
  display: inline-block;
  border-radius: 4px;
  padding: 4px;
  color: vars.$whiteColor;
  font-size: 14px;
  margin-bottom: 8px;
  transition: all 0.3s;

  &:not(:nth-child(0)) {
    margin-right: 8px;
  }

  @each $name, $color in $tagColor {
    &.tag-#{$name} {
      background: $color;
    }
  }
  @each $name, $color in $tagTextColors {
    &.tag-color-#{$name} {
      color: $color;
    }
  }

  &.tag-vip,
  &.tag-full {
    color: vars.$textColor;
    text-transform: uppercase;
  }

  &:not(.hover-none):hover {
    text-decoration: underline;
  }
}

a:-webkit-any-link:focus-visible {
  outline-offset: 0px;
  outline: none;
}
.swiper .swiper-pagination {
  width: 80px;
  white-space: nowrap;
  overflow: hidden;
  left: 50%;
  transform: translateX(-50%);
  //   position: relative;
  & .swiper-pagination-bullet {
    margin: 0 4px;
    position: relative;
    left: 32px;
    transition: all 0.3s;
    &.active-prev,
    &.active-next {
      transform: scale(0.7);
    }
    &.active-prev-prev,
    &.active-next-next {
      transform: scale(0.4);
    }
  }
}

.form-wrapper {
  width: 400px;
  background: vars.$whiteColor;
  box-shadow: 0px 0px 4px rgba($color: #000000, $alpha: 0.3);
  border-radius: 8px;

  @include vars.centerStyle;

  @include vars.breakpoint-down(xs) {
    width: 340px;
  }

  @include vars.breakpoint-down(xxs) {
    width: 300px;
  }
}

.form {
  width: 100%;
  & .form__title {
    padding: 12px 12px 24px 12px;
    border-bottom: 2px solid vars.$separatorColor;
    color: vars.$primaryColor;
    display: flex;
    align-items: center;
    justify-content: space-between;

    & svg {
      font-size: 30px;
    }
  }
  .form__body {
    padding: 12px;
    display: flex;
    flex-direction: column;
    gap: 16px;
  }
}
.titles h2 {
  color: vars.$textColor;
  font-weight: 800;
  font-size: 1.4rem;
}

.list-contents {
  border-radius: 6px;
  margin-top: 32px;
  overflow: hidden;
  box-shadow: 0px 0px 2px 1px rgba($color: #000000, $alpha: 0.05);
}

// pagination
.rc-pagination-item-active {
  background: vars.$primaryColor;
  border-color: vars.$primaryColor;
  & > a {
    color: vars.$whiteColor;
  }
}
.rc-pagination-jump-next,
.rc-pagination-jump-prev {
  border: none !important;
}
.rc-pagination-options {
  display: none !important;
}
.rc-pagination-disabled {
  opacity: 0.6;
  pointer-events: none;
}
